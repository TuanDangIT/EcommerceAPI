// <auto-generated />
using System;
using Ecommerce.Modules.Discounts.Core.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ecommerce.Modules.Discounts.Core.DAL.Migrations
{
    [DbContext(typeof(DiscountsDbContext))]
    partial class DiscountsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("discounts")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Modules.Discounts.Core.Entities.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Discounts", "discounts");

                    b.HasDiscriminator<string>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Ecommerce.Modules.Discounts.Core.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Justification")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<decimal>("Price")
                        .HasPrecision(11, 2)
                        .HasColumnType("numeric(11,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Offers", "discounts");
                });

            modelBuilder.Entity("Ecommerce.Modules.Discounts.Core.Entities.NominalDiscount", b =>
                {
                    b.HasBaseType("Ecommerce.Modules.Discounts.Core.Entities.Discount");

                    b.Property<decimal>("NominalValue")
                        .HasPrecision(11, 2)
                        .HasColumnType("numeric(11,2)");

                    b.HasDiscriminator().HasValue("NominalDiscount");
                });

            modelBuilder.Entity("Ecommerce.Modules.Discounts.Core.Entities.PercentageDiscount", b =>
                {
                    b.HasBaseType("Ecommerce.Modules.Discounts.Core.Entities.Discount");

                    b.Property<decimal>("Percent")
                        .HasPrecision(2, 2)
                        .HasColumnType("numeric(2,2)");

                    b.HasDiscriminator().HasValue("PercentageDiscount");
                });
#pragma warning restore 612, 618
        }
    }
}
